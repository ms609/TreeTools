% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SplitFunctions.R
\name{TrivialSplits}
\alias{TrivialSplits}
\alias{WithoutTrivialSplits}
\title{Identify and remove trivial splits}
\usage{
TrivialSplits(splits, nTip = attr(splits, "nTip"))

WithoutTrivialSplits(splits, nTip = attr(splits, "nTip"))
}
\arguments{
\item{splits}{An object of class \code{\link[=as.Splits]{Splits}}.}

\item{nTip}{Integer specifying number of tips (leaves).}
}
\value{
\code{TrivialSplits()} returns a logical vector specifying whether each
split in \code{splits} is trivial, i.e. includes or excludes only a single tip or
no tips at all.

\code{WithoutTrivialSplits()} returns a \code{Splits} object with trivial
splits removed.
}
\description{
\code{TrivialSplits()} identifies trivial splits (which separate one or zero
leaves from all others); \code{WithoutTrivialSplits()} removes them from a
\code{Splits} object.
}
\examples{
splits <- as.Splits(PectinateTree(letters[1:9]))
efgh <- Subsplit(splits, tips = letters[5:8], keepAll = TRUE)
summary(efgh)

TrivialSplits(efgh)
summary(WithoutTrivialSplits(efgh))
}
\seealso{
Other split manipulation functions: 
\code{\link{DropTip}()},
\code{\link{SplitConsistent}()},
\code{\link{Subsplit}()}
}
\author{
\href{https://orcid.org/0000-0001-5660-1727}{Martin R. Smith}
(\href{mailto:martin.smith@durham.ac.uk}{martin.smith@durham.ac.uk})
}
\concept{split manipulation functions}
