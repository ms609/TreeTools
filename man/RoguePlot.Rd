% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RoguePlot.R
\name{RoguePlot}
\alias{RoguePlot}
\title{Visualise position of rogue taxa}
\usage{
RoguePlot(
  trees,
  tip,
  p = 1,
  plot = TRUE,
  Palette = colorRampPalette(c(par("fg"), "#009E73"), space = "Lab"),
  nullCol = rgb(colorRamp(unlist(par(c("fg", "bg"))), space = "Lab")(0.8)/255),
  thin = par("lwd"),
  fat = thin + 1L,
  ...
)
}
\arguments{
\item{trees}{List or \code{multiPhylo} object containing phylogenetic trees
of class \code{phylo} to be summarized.}

\item{tip}{Numeric or character identifying rogue leaf, in format accepted
by \code{drop.tip()}.}

\item{p}{A numeric value between 0.5 and 1 giving the proportion for a clade
to be represented in the consensus tree (see \code{consensus()}).}

\item{plot}{Logical specifying whether to plot the tree.}

\item{Palette}{Function that takes a parameter \code{n} and generates a colour
palette with \code{n} entries.}

\item{nullCol}{Colour to paint regions of the tree on which the rogue is
never found.}

\item{thin, fat}{Numeric specifying width to plot edges if the rogue tip
never / sometimes does attach to them.}

\item{\dots}{Additional parameters to \code{plot.phylo()}.}
}
\value{
\code{RoguePlot()} returns a list whose elements are:
\itemize{
\item \code{cons}: The reduced consensus tree, in preorder;
\item \code{onEdge}: a vector of integers specifying the number of
trees in \code{trees} in which the rogue leaf is attached to each edge in turn
of the consensus tree;
\item \code{atNode}: a vector of integers specifying the number of trees in \code{trees}
in which the rogue leaf is attached to an edge collapsed into each node
of the consensus tree.
}
}
\description{
Plots a consensus of trees with a rogue taxon omitted, with edges coloured
according to the proportion of trees in which the taxon attaches to that
edge, after Klopfstein & Spasojevic (2019).
}
\details{
Note: this function is currently under development and is not fully tested.
Please check that results are in line with expectations before using the
output, and \href{https://github.com/ms609/TreeTools/issues/53}{report any errors}.
}
\examples{
trees <- list(read.tree(text = '(a, (b, (c, (rogue, (d, (e, f))))));'),
              read.tree(text = '(a, (b, (c, (rogue, (d, (e, f))))));'),
              read.tree(text = '(a, (b, (c, (rogue, (d, (e, f))))));'),
              read.tree(text = '(a, (b, (c, (rogue, (d, (e, f))))));'),
              read.tree(text = '(rogue, (a, (b, (c, (d, (e, f))))));'),
              read.tree(text = '((rogue, a), (b, (c, (d, (e, f)))));'),
              read.tree(text = '(a, (b, ((c, d), (rogue, (e, f)))));'),
              read.tree(text = '(a, (b, ((c, (rogue, d)), (e, f))));'),
              read.tree(text = '(a, (b, (c, (d, (rogue, (e, f))))));'))
RoguePlot(trees, 'rogue')
}
\references{
\insertRef{Klopfstein2019}{TreeTools}
}
\author{
Martin R. Smith (\href{mailto:martin.smith@durham.ac.uk}{martin.smith@durham.ac.uk})
}
