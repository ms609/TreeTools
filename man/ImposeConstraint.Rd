% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ImposeConstraint.R
\name{ImposeConstraint}
\alias{ImposeConstraint}
\alias{AddUnconstrained}
\title{Force a tree to match a constraint}
\usage{
ImposeConstraint(tree, constraint)

AddUnconstrained(constraint, toAdd, asPhyDat = TRUE)
}
\arguments{
\item{tree}{A tree of class \code{\link[ape:read.tree]{phylo}}.}

\item{constraint}{An object of class \code{phyDat}; returned trees will be
perfectly compatible with each character in \code{constraint}.
See \href{https://ms609.github.io/TreeSearch/articles/inapplicable.html}{vignette}
for further examples.}

\item{toAdd}{Character vector specifying taxa to add to constraint.}

\item{asPhyDat}{Logical: if \code{TRUE}, return a \code{phyDat} object; if \code{FALSE}, return
a matrix.}
}
\value{
\code{ImposeConstraint()} returns a tree of class \code{phylo}, consistent
with \code{constraint}.
}
\description{
Modify a tree such that it matches a specified constraint.
This is at present a somewhat crude implementation that attempts to retain
much of the strucure of \code{tree} whilst guaranteeing compatibility with
each entry in \code{constraint}.
}
\section{Functions}{
\itemize{
\item \code{AddUnconstrained}: Expand a constraint to include unconstrained
taxa.
}}

\examples{
tips <- letters[1:9]
tree <- as.phylo(1, 9, tips)
plot(tree)

constraint <- StringToPhyDat('0000?1111 000111111 0000??110', tips, FALSE)
plot(ImposeConstraint(tree, constraint))
}
\seealso{
Other tree manipulation: 
\code{\link{AddTip}()},
\code{\link{CollapseNode}()},
\code{\link{ConsensusWithout}()},
\code{\link{DropTip}()},
\code{\link{EnforceOutgroup}()},
\code{\link{LeafLabelInterchange}()},
\code{\link{MakeTreeBinary}()},
\code{\link{RenumberTips}()},
\code{\link{RenumberTree}()},
\code{\link{Renumber}()},
\code{\link{RootTree}()},
\code{\link{SingleTaxonTree}()},
\code{\link{SortTree}()},
\code{\link{Subtree}()}
}
\author{
Martin R. Smith (\href{mailto:martin.smith@durham.ac.uk}{martin.smith@durham.ac.uk})
}
\concept{tree manipulation}
