# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
      - '**valgrind**'
    paths:
      - '.github/workflows/memcheck.yml'
      - 'src/**'
      - 'inst/include/**'
      - 'memcheck/**'
      - 'tests/testthat/**.R'
      - 'vignettes/**.Rmd'
  pull_request:
    branches:
      - main
      - master
    paths:
      - '.github/workflows/memcheck.yml'
      - 'src/**'
      - 'inst/include/**'
      - 'memcheck/**'
      - 'tests/testthat/**.R'
      - 'vignettes/**.Rmd'

name: mem-check

jobs:
  mem-check:
    runs-on: ubuntu-20.04

    name: valgrind ${{ matrix.config.test }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {test: 'tests'}
          - {test: 'examples'}
          - {test: 'vignettes'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      RSPM: https://packagemanager.rstudio.com/cran/__linux__/focal/latest
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      - name: Initialize ASan configuration (??)
        run: |
          export LD_PRELOAD=$(gcc -print-file-name=libasan.so)

          echo "PKG_CFLAGS = -g -fsanitize=address -fno-omit-frame-pointer" > src/Makevars
          echo "PKG_CXXFLAGS = -g -fsanitize=address -fno-omit-frame-pointer" >> src/Makevars

          mkdir ~/.R
          echo "LDFLAGS = -g -fsanitize=address -fno-omit-frame-pointer" >> ~/.R/Makevars

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: release # CRAN uses devel, but takes ages to load deps.

      - name: Install brew (which is crashing R under pak)
        run: |
          install.packages("brew")
        shell: Rscript {0}

      - name: Set up R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          needs: |
            check
            memcheck

      - name: Install apt packages
        run: |
          sudo apt-get install valgrind texlive-latex-base
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install package
        run: |
          cd ..
          R CMD build --no-manual --no-resave-data TreeTools
          R CMD INSTALL TreeTools*.tar.gz
          cd TreeTools

      - name: valgrind - memcheck ${{ matrix.config.test }}
        run: |
          R -d "valgrind --tool=memcheck \
          --leak-check=full \
          --errors-for-leak-kinds=definite \
          --error-exitcode=1" \
          --vanilla < memcheck/${{ matrix.config.test }}.R
